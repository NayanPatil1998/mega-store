[{"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/index.tsx":"1","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Pages/Login.pages/Login.pages.tsx":"2","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/reportWebVitals.ts":"3","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/App.tsx":"4","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Components/Carousel.component/Carousel.component.tsx":"5","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Layout/Header/header.layout.tsx":"6","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Layout/Footer/Footer.layout.tsx":"7","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/Reducers/index.ts":"8","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/store.ts":"9","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Firebase/firebase.ts":"10","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Pages/SignupPage/signup.tsx":"11","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/axios/axios.services.ts":"12","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/Actions/actionCreators.ts":"13","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/Actions/actionTypes.ts":"14","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Pages/Home/Home.tsx":"15","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Components/ProductContainer/ProductContainer.tsx":"16","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Components/ProductContainer/Product/product.component.tsx":"17"},{"size":622,"mtime":1613580421241,"results":"18","hashOfConfig":"19"},{"size":3050,"mtime":1613840062849,"results":"20","hashOfConfig":"19"},{"size":425,"mtime":1613320027003,"results":"21","hashOfConfig":"19"},{"size":1372,"mtime":1613813970818,"results":"22","hashOfConfig":"19"},{"size":4133,"mtime":1613748028382,"results":"23","hashOfConfig":"19"},{"size":3070,"mtime":1614017144550,"results":"24","hashOfConfig":"19"},{"size":3589,"mtime":1613746140115,"results":"25","hashOfConfig":"19"},{"size":567,"mtime":1613753486158,"results":"26","hashOfConfig":"19"},{"size":254,"mtime":1613580049525,"results":"27","hashOfConfig":"19"},{"size":527,"mtime":1613825290859,"results":"28","hashOfConfig":"19"},{"size":3992,"mtime":1613840093559,"results":"29","hashOfConfig":"19"},{"size":851,"mtime":1614526292963,"results":"30","hashOfConfig":"19"},{"size":367,"mtime":1613753504992,"results":"31","hashOfConfig":"19"},{"size":80,"mtime":1613752178495,"results":"32","hashOfConfig":"19"},{"size":1169,"mtime":1614601525497,"results":"33","hashOfConfig":"19"},{"size":747,"mtime":1614603248454,"results":"34","hashOfConfig":"19"},{"size":1568,"mtime":1614622189570,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1h99hzd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/index.tsx",[],["82","83"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Pages/Login.pages/Login.pages.tsx",["84"],"import { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../Firebase/firebase\";\nimport \"./Login.page.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport { IinitialState } from \"../../Redux/Reducers\";\nimport { toast } from \"react-toastify\";\nimport { css } from \"@emotion/react\";\nimport RingLoader from \"react-spinners/RingLoader\";\nconst Login: React.FunctionComponent = () => {\n  toast.configure();\n  const state = useSelector((state: IinitialState) => state);\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  if (state.user != null) {\n    history.push(\"/\");\n  }\n\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n  `;\n\n  const signIn = (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        toast.success(\"Yay, Login Successful\");\n        console.log(user);\n        setLoading(false);\n        history.push(\"/\");\n      })\n      .catch((err: firebase.FirebaseError) => {\n        toast.error(\"Oops!! \" + err.message);\n      });\n  };\n\n  return (\n    <div className=\"text-center LoginPageContainer\">\n      {loading ? (\n        <RingLoader loading={loading} css={override} size={150} />\n      ) : (\n        <main className=\"form-signin\">\n          <form onSubmit={signIn}>\n            <p className=\"h1\">Mega Store</p>\n            <h1 className=\"h4 mb-3 fw-normal\">Please sign in</h1>\n            <label htmlFor=\"inputEmail\" className=\"visually-hidden\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              id=\"inputEmail\"\n              value={email}\n              className=\"form-control\"\n              placeholder=\"Email address\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n              autoFocus\n            />\n            <label htmlFor=\"inputPassword\" className=\"visually-hidden\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"inputPassword\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"form-control\"\n              placeholder=\"Password\"\n              required\n            />\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n              Sign in\n            </button>\n            {/* <p className=\"mt-5 mb-3 text-muted\">&copy; 2017-2021</p> */}\n          </form>\n          <p className=\"mt-5 mb-3 text-muted\">\n            Don't have an account?{\" \"}\n            <Link style={{ textDecoration: \"none\" }} to=\"/signup\">\n              <span style={{ color: \"#0095f6\" }}> Sign up</span>\n            </Link>\n          </p>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n",["85","86"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/reportWebVitals.ts",[],["87","88"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/App.tsx",["89"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Layout/Header/header.layout\";\nimport Carousel from \"./Components/Carousel.component/Carousel.component\";\nimport Footer from \"./Layout/Footer/Footer.layout\";\nimport Login from \"./Pages/Login.pages/Login.pages\";\nimport SignUp from \"./Pages/SignupPage/signup\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { auth } from \"./Firebase/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"./Redux/Actions/actionCreators\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"User ----------->>> \", authUser);\n      if (authUser) {\n        dispatch(setUser(authUser));\n      } else {\n        dispatch(setUser(null));\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/signup\"></Route>\n            <Route path=\"/\">\n              <Header />\n              <Carousel />\n              <Footer />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Components/Carousel.component/Carousel.component.tsx",[],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Layout/Header/header.layout.tsx",[],["90","91"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Layout/Footer/Footer.layout.tsx",[],["92","93"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/Reducers/index.ts",[],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/store.ts",[],["94","95"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Firebase/firebase.ts",[],["96","97"],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Pages/SignupPage/signup.tsx",["98"],"import { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../Firebase/firebase\";\nimport { createUser } from \"../../axios/axios.services\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser } from \"../../Redux/Actions/actionCreators\";\nimport { IinitialState } from \"../../Redux/Reducers\";\nimport { toast } from \"react-toastify\";\nimport { css } from \"@emotion/react\";\nimport RingLoader from \"react-spinners/RingLoader\";\n\n// CSS\nimport \"./signup.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignUp: React.FunctionComponent = () => {\n  toast.configure();\n  const state = useSelector((state: IinitialState) => state);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  if (state.user != null) {\n    history.push(\"/\");\n  }\n\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n  `;\n\n  const register = (e: any) => {\n    setLoading(true);\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((rootUser) => {\n        var user = firebase.auth().currentUser;\n\n        user\n          ?.updateProfile({\n            displayName: name,\n          })\n          .then(() => {\n            createUser(name, email, user?.uid);\n            dispatch(setUser(user));\n            toast.success(\"Hurray, Sign Up Successful\");\n            console.log(user);\n            setLoading(false);\n            history.push(\"/\");\n          })\n          .catch(function (error) {\n            toast.error(\"Oops!! \" + error.message);\n          });\n      })\n      .catch((errr) => toast.error(\"Oops!! \" + errr.message));\n  };\n\n  return (\n    <div className=\"text-center LoginPageContainer\">\n      {loading ? (\n        <RingLoader loading={loading} css={override} size={150} />\n      ) : (\n        <main className=\"form-signin\">\n          <form onSubmit={register}>\n            <p className=\"h1\">Mega Store</p>\n            <h1 className=\"h4 mb-3 fw-normal\">Please sign up</h1>\n            <label htmlFor=\"inputEmail\" className=\"visually-hidden\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"inputName\"\n              value={name}\n              className=\"form-control\"\n              placeholder=\"Name\"\n              required\n              onChange={(e) => setName(e.target.value)}\n              autoFocus\n            />\n            <label htmlFor=\"inputEmail\" className=\"visually-hidden\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              id=\"inputEmail\"\n              value={email}\n              className=\"form-control\"\n              placeholder=\"Email address\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n              autoFocus\n            />\n            <label htmlFor=\"inputPassword\" className=\"visually-hidden\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"inputPassword\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"form-control\"\n              placeholder=\"Password\"\n              required\n            />\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n              Sign Up\n            </button>\n            {/* <p className=\"\">&copy; 2017-2021</p> */}\n          </form>\n          <p className=\"mt-5 mb-3 text-muted\">\n            Don't have an account?{\" \"}\n            <Link style={{ textDecoration: \"none\" }} to=\"/login\">\n              <span style={{ color: \"#0095f6\" }}> Sign in</span>\n            </Link>\n          </p>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default SignUp;\n","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/axios/axios.services.ts",["99","100"],"import axios, {AxiosResponse} from \"axios\";\nimport { auth } from \"../Firebase/firebase\";\nimport IProduct from \"../Components/ProductContainer/Product/product.type\";\n\nexport const baseUrl: string = \"http://0.0.0.0:8080/api\";\n\nexport const createUser = async (\n  name: string,\n  email: string,\n  uid: string | undefined\n) => {\n  const token = await auth.currentUser?.getIdToken();\n  console.log(\"Token ========>>>>\" + token);\n  axios\n    .post(\n      `${baseUrl}/adduser`,\n      {\n        name: name,\n        email: email,\n        uid: uid,\n      },\n      {\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      }\n    )\n    .then(function (response) {\n      console.log(response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\n// export const getProducts = async ()=> {\n//     await\n//\n//\n// }","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/Actions/actionCreators.ts",[],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Redux/Actions/actionTypes.ts",[],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Pages/Home/Home.tsx",["101","102","103"],"import React from 'react'\nimport Header from \"../../Layout/Header/header.layout\";\nimport Carousel from \"../../Components/Carousel.component/Carousel.component\";\nimport Footer from \"../../Layout/Footer/Footer.layout\";\nimport ProductContainer from \"../../Components/ProductContainer/ProductContainer\";\nimport {baseUrl} from \"../../axios/axios.services\";\nimport IProduct from \"../../Components/ProductContainer/Product/product.type\";\nimport axios, {AxiosResponse} from \"axios\";\n\n\n\n\n\n\nconst Home : React.FunctionComponent = () => {\n\n    const [products, setProducts] = React.useState([])\n    const [loading, setLoading] = React.useState(false);\n    const [error, setError] = React.useState(\"\")\n    React.useEffect(() => {\n        axios.get<IProduct[]>(`${baseUrl}/featproducts`)\n            .then((res: AxiosResponse) => {\n                setProducts(res.data);\n            }).catch(err => {\n                console.log(err)\n            setError(err)\n\n        })\n    }, [])\n\n    return (\n        <div>\n            <Header />\n            <Carousel />\n            <ProductContainer productList={products} />\n            <Footer />\n        </div>\n    )\n}\n\nexport  default Home","/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Components/ProductContainer/ProductContainer.tsx",[],"/home/snake/Desktop/ReactJS_Projects/mega-store/client/src/Components/ProductContainer/Product/product.component.tsx",["104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":19},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"108","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":26,"column":6,"nodeType":"120","endLine":26,"endColumn":8,"suggestions":"121"},{"ruleId":"106","replacedBy":"122"},{"ruleId":"108","replacedBy":"123"},{"ruleId":"106","replacedBy":"124"},{"ruleId":"108","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},{"ruleId":"108","replacedBy":"127"},{"ruleId":"106","replacedBy":"128"},{"ruleId":"108","replacedBy":"129"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":19},{"ruleId":"110","severity":1,"message":"130","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":29},{"ruleId":"110","severity":1,"message":"131","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":16},{"ruleId":"110","severity":1,"message":"132","line":18,"column":12,"nodeType":"112","messageId":"113","endLine":18,"endColumn":19},{"ruleId":"110","severity":1,"message":"133","line":18,"column":21,"nodeType":"112","messageId":"113","endLine":18,"endColumn":31},{"ruleId":"110","severity":1,"message":"134","line":19,"column":12,"nodeType":"112","messageId":"113","endLine":19,"endColumn":17},{"ruleId":"110","severity":1,"message":"135","line":5,"column":23,"nodeType":"112","messageId":"113","endLine":5,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":28,"column":29,"nodeType":"138","endLine":28,"endColumn":73},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["139"],["140"],["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["141"],["139"],["140"],["139"],["140"],["139"],["140"],["139"],["140"],"'AxiosResponse' is defined but never used.","'IProduct' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'Star' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [dispatch]",{"range":"144","text":"145"},[861,863],"[dispatch]"]